============ First steps to prepare for installation =============
%> sudo yum install python3-devel python3-numpy atlas
%> sudo dnf install https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm -y

Depending on if you are installing on RedHat8 or CentOS8 you will have to enable some "extras" which is done by one of the following two commands. 
(On CentOS8) %> dnf config-manager --set-enabled PowerTools
(On RedHat8) %> subscription-manager repos --enable "codeready-builder-for-rhel-8-*-rpms"

%> sudo yum install postgresql postgresql-contrib

============ Initial setup (postgres) =============
Before we start to configure the system, we need to setup the database If you already have a working database with the baltrad database 
user created you can skip this step.

%> sudo yum install postgresql-devel postgresql-server
%> sudo postgresql-setup initdb
%> sudo vi /var/lib/pgsql/data/pg_hba.conf
# Change ident to md5
%> sudo systemctl start postgresql
%> sudo su - postgres
postgres ~]$ psql
postgres=# create user baltrad with password 'baltrad';
postgres=# create database baltrad with owner baltrad;
postgres=# \q
postgres ~]$ logout
%> sudo systemctl enable postgresql

============ Initial the baltrad node =============
The node will be installed when issuing the following command since the packages will ensure that the dependencies also are installed.
 
%> sudo yum install baltrad* rave* bbufr* beamb* bropo*

============ Configuring the node =============
When creating the configuration file, the default will be /etc/baltrad/localhost.properties but if you 
for some reason want to use a different properties file, you can just add
"--conf=..../myproperties.properties" to all of the below baltrad-config calls.

%> baltrad-config init --create-config 
%> baltrad-config init --create-keys
# Edit the configuration file /etc/baltrad/localhost.properties (or self-defined) and modify the properties as needed
%> baltrad-config setup --install-database

============ Starting the system =============
Now it's hopefully just to start and enable the services.
%> systemctl start bdbserver;systemctl start raved;systemctl start baltrad-node
# And if all good above? 
%> systemctl enable bdbserver;systemctl enable raved;systemctl enable baltrad-node

==== Import the sources =====

It's essential that a baltrad node knows about all sources (radars) and we must import the sources before we can
do anything useful with the node.

baltrad ~]$ baltrad-bdb-client import_sources --url=http://localhost:8090 /etc/baltrad/rave/config/odim_source.xml

==== Firewall  =====
If you want to ensure that you can access the dex user interface from a remote computer you will have to ensure that
the ports 8080 and 8443 are open for remote access. This is easily done by issuing the following 3 commands.

baltrad ~]$ sudo firewall-cmd --zone=public --add-port=8080/tcp --permanent
baltrad ~]$ sudo firewall-cmd --zone=public --add-port=8443/tcp --permanent
baltrad ~]$ sudo firewall-cmd --reload

==== Finally =====
Just to ensure that everything is starting properly after the installation it might be a good idea to reboot the
computer and verify that all services has started ok.

baltrad ~]$ sudo shutdown -r now
 