diff --git a/src/java/eu/baltrad/dex/db/controller/BltFileDetailsController.java b/src/java/eu/baltrad/dex/db/controller/BltFileDetailsController.java
index b6423e7..9802268 100644
--- a/src/java/eu/baltrad/dex/db/controller/BltFileDetailsController.java
+++ b/src/java/eu/baltrad/dex/db/controller/BltFileDetailsController.java
@@ -37,9 +37,9 @@ import org.springframework.web.bind.annotation.RequestMapping;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.ui.ModelMap;
 
-import ncsa.hdf.object.h5.H5File;
-import ncsa.hdf.object.Group;
-import ncsa.hdf.object.Dataset;
+import hdf.object.h5.H5File;
+import hdf.object.Group;
+import hdf.object.Dataset;
 
 import org.apache.log4j.LogManager;
 import org.apache.log4j.Logger;
diff --git a/src/java/eu/baltrad/dex/db/controller/BltImagePreviewController.java b/src/java/eu/baltrad/dex/db/controller/BltImagePreviewController.java
index 65a0761..0e212a7 100644
--- a/src/java/eu/baltrad/dex/db/controller/BltImagePreviewController.java
+++ b/src/java/eu/baltrad/dex/db/controller/BltImagePreviewController.java
@@ -42,9 +42,9 @@ import javax.servlet.http.HttpServletRequest;
 import java.io.File;
 
 import java.util.UUID;
-import ncsa.hdf.object.Dataset;
-import ncsa.hdf.object.Group;
-import ncsa.hdf.object.h5.H5File;
+import hdf.object.Dataset;
+import hdf.object.Group;
+import hdf.object.h5.H5File;
 
 /**
  * Implements data visualization and preview functionality.
diff --git a/src/java/eu/baltrad/dex/db/util/BltAttribute.java b/src/java/eu/baltrad/dex/db/util/BltAttribute.java
index 2a269f7..18441ea 100644
--- a/src/java/eu/baltrad/dex/db/util/BltAttribute.java
+++ b/src/java/eu/baltrad/dex/db/util/BltAttribute.java
@@ -19,8 +19,8 @@ along with the BaltradDex package library.  If not, see <http://www.gnu.org/lice
 
 package eu.baltrad.dex.db.util;
 
-import ncsa.hdf.object.Attribute;
-import ncsa.hdf.object.Datatype;
+import hdf.object.Attribute;
+import hdf.object.Datatype;
 
 /**
  * @author Anders Henja
@@ -33,21 +33,25 @@ public class BltAttribute {
   }
   
   public boolean isDouble() {
-    return attr.getType().getDatatypeClass() == Datatype.CLASS_FLOAT;
+    return attr.getDatatype().getDatatypeClass() == Datatype.CLASS_FLOAT;;
   }
   
   public Double getDouble() {
     if (isDouble()) {
       Double result = null;
       try {
-        float attrFloat[] = (float[]) attr.getValue();
+        float attrFloat[] = (float[]) attr.getData();
         Float f = attrFloat[0];
         double d = f.doubleValue();
         result = d;
-      } catch (ClassCastException e) {
-        double attrDouble[] = (double[]) attr.getValue();
-        Double d = attrDouble[0];
-        result = d;
+      } catch (Exception e) {
+        try {
+          double attrDouble[] = (double[]) attr.getData();
+          Double d = attrDouble[0];
+          result = d;
+        } catch (Exception e2) {
+          throw new RuntimeException(e2);
+        }
       }
       return result;
     } else {
@@ -56,21 +60,25 @@ public class BltAttribute {
   }
   
   public boolean isLong() {
-    return attr.getType().getDatatypeClass() == Datatype.CLASS_INTEGER;
+    return attr.getDatatype().getDatatypeClass() == Datatype.CLASS_INTEGER;
   }
 
   public Long getLong() {
     if (isLong()) {
       Long result = null;
       try {
-        int attrInt[] = (int[]) attr.getValue();
+        int attrInt[] = (int[]) attr.getData();
         Integer i = attrInt[0];
         long l = i.longValue();
         result = l;
-      } catch (ClassCastException e) {
-        long attrLong[] = (long[]) attr.getValue();
-        Long l = attrLong[0];
-        result = l;
+      } catch (Exception e) {
+        try {
+          long attrLong[] = (long[]) attr.getData();
+          Long l = attrLong[0];
+          result = l;
+        } catch (Exception e2) {
+          throw new RuntimeException(e2);
+        }
       }
       return result;
     } else {
@@ -79,12 +87,16 @@ public class BltAttribute {
   }
 
   public boolean isString() {
-    return attr.getType().getDatatypeClass() == Datatype.CLASS_STRING;
+    return attr.getDatatype().getDatatypeClass() == Datatype.CLASS_STRING;
   }
   
   public String getString() {
     if (isString()) {
-      return ((String[]) attr.getValue())[0];
+      try {
+        return ((String[]) attr.getData())[0];
+      } catch (Exception e) {
+        throw new RuntimeException(e);
+      }
     } else {
       throw new RuntimeException("Can not return String.");
     }
diff --git a/src/java/eu/baltrad/dex/db/util/BltDataProcessor.java b/src/java/eu/baltrad/dex/db/util/BltDataProcessor.java
index 68948af..d04c2fe 100644
--- a/src/java/eu/baltrad/dex/db/util/BltDataProcessor.java
+++ b/src/java/eu/baltrad/dex/db/util/BltDataProcessor.java
@@ -21,12 +21,12 @@
 
 package eu.baltrad.dex.db.util;
 
-import ncsa.hdf.object.FileFormat;
-import ncsa.hdf.object.h5.H5File;
-import ncsa.hdf.object.Group;
-import ncsa.hdf.object.Dataset;
-import ncsa.hdf.object.Datatype;
-import ncsa.hdf.object.Attribute;
+import hdf.object.FileFormat;
+import hdf.object.h5.H5File;
+import hdf.object.Group;
+import hdf.object.Dataset;
+import hdf.object.Datatype;
+import hdf.object.Attribute;
 
 import javax.swing.tree.DefaultMutableTreeNode;
 import javax.imageio.ImageIO;
@@ -179,8 +179,7 @@ public class BltDataProcessor {
      */
     public Group getH5Root(H5File h5File) throws RuntimeException {
         try {
-            Group root = (Group) ((DefaultMutableTreeNode) h5File.getRootNode())
-                    .getUserObject();
+          Group root = (Group)h5File.getRootObject();
             return root;
         } catch (Exception e) {
             throw new RuntimeException("Failed to access H5 file's root", e);
@@ -281,34 +280,46 @@ public class BltDataProcessor {
     public Object getH5AttributeValue() {
         Object value = null;
         
-        if (getH5Attribute().getType().getDatatypeClass() == Datatype.CLASS_INTEGER) {
+        if (getH5Attribute().getDatatype().getDatatypeClass() == Datatype.CLASS_INTEGER) {
             try {
-                int attrInt[] = (int[]) getH5Attribute().getValue();
+                int attrInt[] = (int[]) getH5Attribute().getData();
                 Integer i = attrInt[0];
                 long l = i.longValue();
                 value = l;
-            } catch (ClassCastException e) {
-                long attrLong[] = (long[]) getH5Attribute().getValue();
+            } catch (Exception e) {
+              try {
+                long attrLong[] = (long[]) getH5Attribute().getData();
                 Long l = attrLong[0];
                 value = l;
+              } catch (Exception e2) {
+                throw new RuntimeException(e2);
+              }
             }
         }
-        if (getH5Attribute().getType().getDatatypeClass() == Datatype.CLASS_FLOAT) {
+        if (getH5Attribute().getDatatype().getDatatypeClass() == Datatype.CLASS_FLOAT) {
             try {
-                float attrFloat[] = (float[]) getH5Attribute().getValue();
+                float attrFloat[] = (float[]) getH5Attribute().getData();
                 Float f = attrFloat[0];
                 double d = f.doubleValue();
                 value = d;
-            } catch (ClassCastException e) {
-                double attrDouble[] = (double[]) getH5Attribute().getValue();
+            } catch (Exception e) {
+              try {
+                double attrDouble[] = (double[]) getH5Attribute().getData();
                 Double d = attrDouble[0];
                 value = d;
+              } catch (Exception e2) {
+                throw new RuntimeException(e2);
+              }
             }
         }
-        if (getH5Attribute().getType().getDatatypeClass() == 
+        if (getH5Attribute().getDatatype().getDatatypeClass() == 
                 Datatype.CLASS_STRING ) {
-            String attrString[] = (String[]) getH5Attribute().getValue();
+          try {
+            String attrString[] = (String[]) getH5Attribute().getData();
             value = attrString[0];
+          } catch (Exception e) {
+            throw new RuntimeException(e);
+          }
         }
         return value;
     }
diff --git a/test/eu/baltrad/dex/db/util/BltDataProcessorTest.java b/test/eu/baltrad/dex/db/util/BltDataProcessorTest.java
index 2bafa14..836b752 100644
--- a/test/eu/baltrad/dex/db/util/BltDataProcessorTest.java
+++ b/test/eu/baltrad/dex/db/util/BltDataProcessorTest.java
@@ -22,9 +22,9 @@
 package eu.baltrad.dex.db.util;
 
 import eu.baltrad.dex.db.util.BltDataProcessor;
-import ncsa.hdf.object.h5.H5File;
-import ncsa.hdf.object.Group;
-import ncsa.hdf.object.Dataset;
+import hdf.object.h5.H5File;
+import hdf.object.Group;
+import hdf.object.Dataset;
 
 import static org.junit.Assert.*;
 import org.junit.Before;
