#! /bin/sh
    
if [ "$1" = configure ]; then
  if ! getent passwd baltrad > /dev/null; then
    adduser --system --home /var/lib/baltrad --no-create-home \
      --shell /bin/bash --group --gecos "Baltrad user" baltrad
  fi
    
  if ! getent group baltrad > /dev/null; then
    addgroup --system baltrad
  fi
  
  if ! id -Gn baltrad | grep -qw baltrad; then
    adduser baltrad baltrad
  fi

  su -s /bin/sh baltrad -c "test -O /var/lib/baltrad &&
    test -G /var/lib/baltrad" || chown baltrad:baltrad /var/lib/baltrad

  chmod 1775 /var/log/baltrad
  chmod 1775 /var/run/baltrad
  chmod 1775 /var/cache/baltrad-node-tomcat

  chown baltrad:baltrad /var/lib/baltrad/rave_pgf_queue.xml  
  chown root:baltrad /var/log/baltrad
  chown root:baltrad /var/run/baltrad
  chown -R root:baltrad /etc/baltrad/rave
  chown 664 /etc/baltrad/rave/Lib/rave_defines.py
  
  chown root:baltrad /etc/baltrad/baltrad-node-tomcat/catalina.properties
  chown root:baltrad /etc/baltrad/baltrad-node-tomcat/context.xml
  chown root:baltrad /etc/baltrad/baltrad-node-tomcat/jaspic-providers.xml
  chown root:baltrad /etc/baltrad/baltrad-node-tomcat/jaspic-providers.xsd
  chown root:baltrad /etc/baltrad/baltrad-node-tomcat/logging.properties
  chown root:baltrad /etc/baltrad/baltrad-node-tomcat/server.xml
  chown root:baltrad /etc/baltrad/baltrad-node-tomcat/tomcat-users.xml
  chown root:baltrad /etc/baltrad/baltrad-node-tomcat/tomcat-users.xsd
  chown root:baltrad /etc/baltrad/baltrad-node-tomcat/web.xml

  chmod 640 /etc/baltrad/baltrad-node-tomcat/catalina.properties
  chmod 640 /etc/baltrad/baltrad-node-tomcat/context.xml
  chmod 640 /etc/baltrad/baltrad-node-tomcat/jaspic-providers.xml
  chmod 640 /etc/baltrad/baltrad-node-tomcat/jaspic-providers.xsd
  chmod 640 /etc/baltrad/baltrad-node-tomcat/logging.properties
  chmod 640 /etc/baltrad/baltrad-node-tomcat/server.xml
  chmod 640 /etc/baltrad/baltrad-node-tomcat/tomcat-users.xml
  chmod 640 /etc/baltrad/baltrad-node-tomcat/tomcat-users.xsd
  chmod 640 /etc/baltrad/baltrad-node-tomcat/web.xml
  
  ldconfig

  TMPNAME=`tempfile`.py
  
  cat <<EOF > $TMPNAME
from rave_pgf_registry import PGF_Registry
a=PGF_Registry(filename="/etc/baltrad/rave/etc/rave_pgf_registry.xml")
a.deregister('eu.baltrad.beast.generatesite2d')
a.register('eu.baltrad.beast.generatesite2d', 'rave_pgf_site2D_plugin', 'generate', 'Generate Site2D plugin', 'area,quantity,method,date,time,anomaly-qc,qc-mode,prodpar,applygra,ignore-malfunc,ctfilter,pcsid,algorithm_id', '', 'height,range,zrA,zrb,xscale,yscale')
a.deregister('eu.baltrad.beast.generatecomposite')
a.register('eu.baltrad.beast.generatecomposite', 'rave_pgf_composite_plugin', 'generate', 'Generate composite plugin', 'area,quantity,method,date,time,selection,anomaly-qc,qc-mode,reprocess_qfields,prodpar,applygra,ignore-malfunc,ctfilter,qitotal_field,algorithm_id,merge', '', 'height,range,zrA,zrb')
a.deregister('eu.baltrad.beast.generatevolume')
a.register('eu.baltrad.beast.generatevolume', 'rave_pgf_volume_plugin', 'generate', 'Polar volume generation from individual scans', 'source,date,time,anomaly-qc,qc-mode,algorithm_id,merge', '', 'height,range,zrA,zrb')
a.deregister('se.smhi.rave.creategmapimage')
a.register('se.smhi.rave.creategmapimage', 'googlemap_pgf_plugin', 'generate', 'Google Map Plugin', 'outfile,date,time,algorithm_id', '', '')
a.deregister('eu.baltrad.beast.applyqc')
a.register('eu.baltrad.beast.applyqc', 'rave_pgf_apply_qc_plugin', 'generate', 'Apply quality controls on a polar volume', 'date,time,anomaly-qc,algorithm_id', '', '')  
EOF
  python $TMPNAME
  \rm -f $TMPNAME
fi
